# -*- coding: utf-8 -*-
"""Metode Runge-Kutta Orde 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vSsNiUlBm-kLx-USwtIf4JpDjruo-BNX
"""

#Metode Runge-Kutta Orde 4
# definisikan fungsi f(x)
def f(x,y):
    return x**2*y**2

# Runge-Kutta Orde 4 method
def RK4(x0,y0,xn,n):

    # menghitung ukuran langkah xi
    h = (xn-x0)/n

    print('---------------------------')
    print('x0\ty0\tfxy\tyn')
    print('---------------------------')
    for i in range(n):
        k1 = h * (f(x0, y0))
        k2 = h * (f((x0+h/2), (y0+k1/2)))
        k3 = h * (f((x0+h/2), (y0+k2/2)))
        k4 = h * (f((x0+h), (y0+k3)))
        k =(k1+2*k2+2*k3+k4)/6
        yn = y0 + k
        print('%.4f\t%.4f\t%.4f' % (x0,y0,yn) )
        print('----------------------------')
        y0 = yn
        x0 = x0 + h

    print('\nJadi x=%.4f, y=%.4f' %(xn,yn))

#inputs
print('\nMasukan kondisi awal:')
x0 = float(input('x0 = '))
y0 = float(input('y0 = '))

print('\nMasukan titik yang akan dihitung : ')
xn = float(input('xn = '))

print('\nMasukan jumlah iterasi : ')
step = int(input('Jumlah Iterasi = '))

# Runge-Kutta Orde 4method 
RK4(x0,y0,xn,step)